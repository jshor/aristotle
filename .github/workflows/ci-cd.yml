name: CI/CD

on: push

env:
  NODE_VERSION: '14.x'

  # Git release bot credentials
  GIT_USER: 'GitHub Actions'
  GIT_EMAIL: '41898282+github-actions[bot]@users.noreply.github.com'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Set git credentials
      run: |
        git config --global user.email ${{ env.GIT_USER }}
        git config --global user.name ${{ env.GIT_EMAIL }}

    - name: Install dependencies
      run: yarn

    - name: Run tests
      run: yarn test

    - name: Build application
      run: yarn build

    - name: Upload js bundle
      uses: actions/upload-artifact@v2
      with:
        name: js-bundle
        path: dist
    - name: Upload binary artifact
      uses: actions/upload-artifact@v2
      with:
        name: binary-artifact
        path: build/stage


  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Pull latest
        run: git pull origin master
      - name: Install Vuepress
        run: yarn add vuepress -D
      - name: Build documentation
        run: yarn docs:build
      - name: Create CNAME Record
        run: echo "symbology.dev" > build/docs/CNAME
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_CONFIG_NAME: ${{ env.GIT_USER }}
          GIT_CONFIG_EMAIL: ${{ env.GIT_EMAIL }}
          BRANCH: gh-pages
          FOLDER: build/docs
          CLEAN: true

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          git-user-name: ${{ env.GIT_USER }}
          git-user-email: ${{ env.GIT_EMAIL }}
          tag-prefix: 'v'
          release-count: '0'
          skip-on-empty: false

  upload-binaries:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download binary artifacts
        uses: actions/download-artifact@v2
        with:
          name: binary-artifact
          path: build/stage
      - name: Upload binary artifacts to release
        # only one folder will be present in build/stage, which is named the new version number
        # extract this name and set it as the release name, then upload artifact binaries to it
        run: |
          set -x
          assets=()
          for asset in ./build/stage/**/*; do
            assets+=("-a" "$asset")
          done
          RELEASE_VERSION=$(echo $(ls build/stage| head -1))
          hub release create "${assets[@]}" -m "v$RELEASE_VERSION" "$RELEASE_VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
